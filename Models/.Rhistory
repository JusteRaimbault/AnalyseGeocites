i=1
raxes = as.character(currentpublis[i,colid]);
raxes
currentaxes = strsplit(raxes,',')[[1]]
currentaxes
rauthors = as.character(currentpublis[i,3]);
rauthors
currentauthors = strsplit(rauthors,',')[[1]]
currentauthors
res[currentauthor,currentaxe]
for(currentauthor in currentauthors){
for(currentaxe in currentaxes){
res[currentauthor,currentaxe]=res[currentauthor,currentaxe]+1
}}
currentauthor
res
authorsProbas<-function(authorsid,colid,classesnames,years){
res = matrix(0,length(authorsid),length(classesnames))
rownames(res)<-authorsid;colnames(res)<-classesnames
currentpublis=publis[publis$year%in%years,]
for(i in 1:nrow(currentpublis)){
raxes = as.character(currentpublis[i,colid]);
currentaxes = strsplit(raxes,',')[[1]]
rauthors = as.character(currentpublis[i,3]);
currentauthors = strsplit(rauthors,',')[[1]]
for(currentauthor in currentauthors){
for(currentaxe in currentaxes){
if(currentauthor%in%authorsid&currentaxe%in%classesnames){
res[currentauthor,currentaxe]=res[currentauthor,currentaxe]+1
}
}}
}
}
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
rowSums(axesprobas)
authorsProbas<-function(authorsid,colid,classesnames,years){
res = matrix(0,length(authorsid),length(classesnames))
rownames(res)<-authorsid;colnames(res)<-classesnames
currentpublis=publis[publis$year%in%years,]
for(i in 1:nrow(currentpublis)){
raxes = as.character(currentpublis[i,colid]);
currentaxes = strsplit(raxes,',')[[1]]
rauthors = as.character(currentpublis[i,3]);
currentauthors = strsplit(rauthors,',')[[1]]
for(currentauthor in currentauthors){
for(currentaxe in currentaxes){
if(currentauthor%in%authorsid&currentaxe%in%classesnames){
res[currentauthor,currentaxe]=res[currentauthor,currentaxe]+1
}
}}
}
return(res)
}
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
rowSums(axesprobas)
authorsProbas<-function(authorsid,colid,classesnames,years){
res = matrix(0,length(authorsid),length(classesnames))
rownames(res)<-authorsid;colnames(res)<-classesnames
currentpublis=publis[publis$year%in%years,]
for(i in 1:nrow(currentpublis)){
raxes = as.character(currentpublis[i,colid]);
currentaxes = strsplit(raxes,',')[[1]]
rauthors = as.character(currentpublis[i,3]);
currentauthors = strsplit(rauthors,',')[[1]]
for(currentauthor in currentauthors){
for(currentaxe in currentaxes){
if(currentauthor%in%authorsid&currentaxe%in%classesnames){
res[currentauthor,currentaxe]=res[currentauthor,currentaxe]+1
}
}}
}
return(t(apply(res,1,function(r){r/sum(r)})))
}
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
axesprobas
??adjacency
as_adjacency_matrix(g,type="both")
years
teams = properties$nameshort[properties$type=='equipe']
teams
ames(publis)
names(publis)
mods= c();years=c();types=c()
for(year in unique(publis$year)){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as_adjacency_matrix(g,type = "both")
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
overlappingmodularity <- function(probas,adjacency){#,linkfun=function(p1,p2){return(p1*p2)}){
show(paste0('Computing overlapping modularity : dim(probas)=',dim(probas)[1],' ',dim(probas)[2],' ; dim(adjacency)=',dim(adjacency)[1],' ',dim(adjacency)[2]))
m = sum(adjacency)
n=nrow(probas)
kout=rowSums(adjacency)
kin=colSums(adjacency)
res=0
for(c in 1:ncol(probas)){
if(sum(probas[,c])>0){
if(c%%100==0){show(c/ncol(probas))}
a1 = Diagonal(x=probas[,c])%*%adjacency%*%Diagonal(x=probas[,c])
a2 = sum(kout*probas[,c])*sum(kin*probas[,c])*((sum(probas[,c])/n)^2)/m
res = res + sum(a1) - a2
rm(a1);gc() # loose time to call gc at each step ?
}
}
return(res/m)
}
directedmodularity<-function(membership,adjacency){
# sum([A_ij - k_iout k_j in/m ]\delta (c_i,c_j))
#
#deltac = sparseMatrix(1:nrow(adjacency),1:ncol(adjacency),x=0)
#inds=c()
#for(c in unique(membership)){inds = append(inds,which(membership==c))}
m=sum(adjacency)
kout=rowSums(adjacency);kin=colSums(adjacency)
res = 0;k=length(unique(membership))
for(c in unique(membership)){
#if(c%%100==0){show(c/k)}
inds=which(membership==c)
res = res + sum(adjacency[inds,inds]) - sum(kin[inds])*sum(kout[inds])/m
gc()
}
return(res/m)
}
mods= c();years=c();types=c()
for(year in unique(publis$year)){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as_adjacency_matrix(g,type = "both")
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
rowSums(adjacency)
rowSums(as.matrix(adjacency))
mods= c();years=c();types=c()
for(year in unique(publis$year)){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
library(Matrix)
mods= c();years=c();types=c()
for(year in unique(publis$year)){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
g=ggplot(data.frame(mod=mods,year=years,type=types),aes(x=year,y=mod,colour=type,group=type))
g+geom_point()+geom_line()
library(ggplot2)
g=ggplot(data.frame(mod=mods,year=years,type=types),aes(x=year,y=mod,colour=type,group=type))
g+geom_point()+geom_line()
allyears = setdiff(unique(publis$year),c("2017"))
mods= c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
g=ggplot(data.frame(mod=mods,year=years,type=types),aes(x=year,y=mod,colour=type,group=type))
g+geom_point()+geom_line()
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
load(paste0('res/graph_',year,'.RData'));n=length(V(g)$name)
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interdisc=append(interdisc,1-rowSums(axesprobas^2))
interdisc=append(interdisc,1-rowSums(teamprobas^2))
years=append(years,rep(year,2*n));types=append(types,c(rep("axes",n),rep("equipes",n)))
}
g=ggplot(data.frame(interdisc=interdisc,year=years,type=types),aes(x=interdisc,colour=year))
g+geom_density()+facet_wrap(~type)
is.numeric(years)
g=ggplot(data.frame(interdisc=interdisc,year=as.character(years),type=types),aes(x=interdisc,colour=year))
g+geom_density()+facet_wrap(~type)
g+geom_bar()+facet_wrap(~type)
g+geom_histogram()+facet_wrap(~type)
g+geom_density()+facet_wrap(~type)
g=ggplot(data.frame(interdisc=interdisc,year=as.character(years),type=types),aes(x=interdisc,fill=year))
g+geom_density(alpha=0.2)+facet_wrap(~type)
adjacency
adjacency%*%axesprobas
dim(adjacency%*%axesprobas)
dim(adjacency%*%teamprobas)
rowSums(adjacency%*%axesprobas)
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
axesinter = adjacency%*%axesprobas;axesinter=t(apply(axesinter,1,function(r){r/rowSums(r)}))
teaminter = adjacency%*%teamprobas;teaminter=t(apply(teaminter,1,function(r){r/rowSums(r)}))
interdisc=append(interdisc,1-rowSums(axesinter^2))
interdisc=append(interdisc,1-rowSums(teaminter^2))
years=append(years,rep(year,2*n));types=append(types,c(rep("axes",n),rep("equipes",n)))
}
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
axesinter =  as.matrix(adjacency%*%axesprobas);axesinter=t(apply(axesinter,1,function(r){r/rowSums(r)}))
teaminter = as.matrix(adjacency%*%teamprobas);teaminter=t(apply(teaminter,1,function(r){r/rowSums(r)}))
interdisc=append(interdisc,1-rowSums(axesinter^2))
interdisc=append(interdisc,1-rowSums(teaminter^2))
years=append(years,rep(year,2*n));types=append(types,c(rep("axes",n),rep("equipes",n)))
}
year
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
dim(adjacency)
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
dim(axesprobas)
dim(teamprobas)
axesinter =  as.matrix(adjacency%*%axesprobas)
dim(axesinter)
apply(axesinter,1,function(r){r/rowSums(r)})
matrix(adjacency%*%axesprobas)
axesinter =  matrix(adjacency%*%axesprobas)
apply(axesinter,1,function(r){r/rowSums(r)})
is.matrix(axesinter)
rowSums(axesinter)
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
axesinter = adjacency%*%axesprobas;axesinter=t(apply(axesinter,1,function(r){r/sum(r)}))
teaminter = adjacency%*%teamprobas;teaminter=t(apply(teaminter,1,function(r){r/sum(r)}))
interdisc=append(interdisc,1-rowSums(axesinter^2))
interdisc=append(interdisc,1-rowSums(teaminter^2))
years=append(years,rep(year,2*n));types=append(types,c(rep("axes",n),rep("equipes",n)))
}
g=ggplot(data.frame(interdisc=interdisc,year=as.character(years),type=types),aes(x=interdisc,colour=year))
g+geom_density()+facet_wrap(~type)
length(interdisc)
dim(axesinter)
nrow(axesinter)*length(allyears)
nrow(axesinter)*length(allyears)*2
n
length(years)
length(types)
data.frame(interdisc=interdisc,year=as.character(years),type=types)
length(interdisc)
nrow(axesinter)
nrow(teaminter)
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
axesinter = adjacency%*%axesprobas;axesinter=t(apply(axesinter,1,function(r){r/sum(r)}))
teaminter = adjacency%*%teamprobas;teaminter=t(apply(teaminter,1,function(r){r/sum(r)}))
interdisc=append(interdisc,1-rowSums(axesinter^2))
interdisc=append(interdisc,1-rowSums(teaminter^2))
years=append(years,rep(year,length(axesinter)+length(teaminter)));types=append(types,c(rep("axes",length(axesinter)),rep("equipes",length(teaminter))))
}
g=ggplot(data.frame(interdisc=interdisc,year=as.character(years),type=types),aes(x=interdisc,colour=year))
g+geom_density()+facet_wrap(~type)
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
axesinter = adjacency%*%axesprobas;axesinter=t(apply(axesinter,1,function(r){r/sum(r)}))
teaminter = adjacency%*%teamprobas;teaminter=t(apply(teaminter,1,function(r){r/sum(r)}))
interdisc=append(interdisc,1-rowSums(axesinter^2))
interdisc=append(interdisc,1-rowSums(teaminter^2))
years=append(years,rep(year,nrow(axesinter)+nrow(teaminter)));types=append(types,c(rep("axes",nrow(axesinter)),rep("equipes",nrow(teaminter))))
}
g=ggplot(data.frame(interdisc=interdisc,year=as.character(years),type=types),aes(x=interdisc,colour=year))
g+geom_density()+facet_wrap(~type)
g+geom_density()+facet_wrap(~type,scales = "free")
year
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
names(adjacency)
colnames(adjacency)
dim(axesprobas)
t(axesprobas)%*%adjacency%*%axesprobas
ccoefs= c();years=c();types=c();ccoefnames=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interaxes = t(axesprobas)%*%adjacency%*%axesprobas
for(axe in axes){if(sum(interaxes[axe,])>0){rate=ifelse(sum(interaxes[axe,setdiff(axes,c(axe))])>0,interaxes[axe,axe]/sum(interaxes[axe,setdiff(axes,c(axe))]),1);
ccoefs=append(ccoefs,rate);types=append(types,"axes");years=append(years,year);ccoefnames=append(ccoefnames,axe)}}
interteams = t(teamprobas)%*%adjacency%*%teamprobas
for(team in teams){if(sum(interteams[team,])>0){rate=ifelse(sum(interteams[team,setdiff(teams,c(team))])>0,interaxes[team,team]/sum(interteams[team,setdiff(teams,c(team))]),1);
ccoefs=append(ccoefs,rate);types=append(types,"equipes");years=append(years,year);ccoefnames=append(ccoefnames,team)}}
}
names(ccoefs)<-ccoefnames
ccoefs= c();years=c();types=c();ccoefnames=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interaxes = t(axesprobas)%*%adjacency%*%axesprobas
for(axe in axes){if(sum(interaxes[axe,])>0){rate=ifelse(sum(interaxes[axe,setdiff(axes,c(axe))])>0,interaxes[axe,axe]/sum(interaxes[axe,setdiff(axes,c(axe))]),1);
ccoefs=append(ccoefs,rate);types=append(types,"axes");years=append(years,year);ccoefnames=append(ccoefnames,axe)}}
interteams = t(teamprobas)%*%adjacency%*%teamprobas
for(team in teams){if(sum(interteams[team,])>0){rate=ifelse(sum(interteams[team,setdiff(teams,c(team))])>0,interteams[team,team]/sum(interteams[team,setdiff(teams,c(team))]),1);
ccoefs=append(ccoefs,rate);types=append(types,"equipes");years=append(years,year);ccoefnames=append(ccoefnames,team)}}
}
names(ccoefs)<-ccoefnames
ccoefs
ccoefs= c();years=c();types=c();ccoefnames=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interaxes = t(axesprobas)%*%adjacency%*%axesprobas
for(axe in axes){if(sum(interaxes[axe,])>0){rate=ifelse(sum(interaxes[axe,setdiff(axes,c(axe))])>0,interaxes[axe,axe]/sum(interaxes[axe,setdiff(axes,c(axe))]),1);
ccoefs=append(ccoefs,rate);types=append(types,"axes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(axe,year))}}
interteams = t(teamprobas)%*%adjacency%*%teamprobas
for(team in teams){if(sum(interteams[team,])>0){rate=ifelse(sum(interteams[team,setdiff(teams,c(team))])>0,interteams[team,team]/sum(interteams[team,setdiff(teams,c(team))]),1);
ccoefs=append(ccoefs,rate);types=append(types,"equipes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(team,year))}}
}
names(ccoefs)<-ccoefnames
ccoefs
ccoefs= c();years=c();types=c();ccoefnames=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interaxes = t(axesprobas)%*%adjacency%*%axesprobas
for(axe in axes){if(sum(interaxes[axe,])>0){rate=interaxes[axe,axe]/sum(interaxes[axe,]);
ccoefs=append(ccoefs,rate);types=append(types,"axes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(axe,year))}}
interteams = t(teamprobas)%*%adjacency%*%teamprobas
for(team in teams){if(sum(interteams[team,])>0){rate=interteams[team,team]/sum(interteams[team,]);
ccoefs=append(ccoefs,rate);types=append(types,"equipes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(team,year))}}
}
names(ccoefs)<-ccoefnames
ccoefs
g=ggplot(data.frame(ccoef=ccoefs,year=years,type=types),aes(x=year,y=ccoef,colour=type,group=type))
g+geom_point()
g+geom_point()+geom_smooth()
library(dplyr)
library(ggplot2)
setwd(paste0(Sys.getenv('CS_HOME'),'/Misc/AnalyseGeocites/Models'))
# authors
authors <- as.tbl(read.csv('data/authors.csv',sep=";",stringsAsFactors = FALSE))
# publis
publis <- as.tbl(read.csv('data/publications.csv',sep=";",stringsAsFactors = FALSE))
# filter on type publis
publis = publis[publis$typepubli%in%c("article_revue","proceedings"),]
# attributes
properties <- as.tbl(read.csv('data/properties.csv',sep=";",stringsAsFactors = FALSE))
axes = properties$nameshort[properties$type=='axe']
teams = properties$nameshort[properties$type=='equipe']
allyears = setdiff(unique(publis$year),c("2017"))
100*length(which(publis$axe=='hors_axe'))/nrow(publis)
authornum = sapply(publis$auteurs,function(s){length(strsplit(s,',')[[1]])})
length(which(authornum==1))/length(authornum)
authors
publis <- as.tbl(read.csv('data/publications.csv',sep=";",stringsAsFactors = FALSE))
publis
publis = publis[publis$typepubli%in%c("article_revue","proceedings"),]
100*length(which(publis$axe=='hors_axe'))/nrow(publis)
axe_num = sapply(publis$axe,function(s){length(strsplit(s,',')[[1]])})
hist(axe_num,breaks=5)
authornum = sapply(publis$auteurs,function(s){length(strsplit(s,',')[[1]])})
length(which(authornum==1))/length(authornum)
hist(authornum,breaks=50,xlab="number of authors",main="")
isumr = authors$umr;names(isumr)<-authors$id
internrate<-function(teams){
res=c()
for(team in teams){
res=append(res,sapply(publis$auteurs[publis$equipe==team],function(s){
auths = strsplit(s,',')[[1]];
currentumr = isumr[auths];
if(length(currentumr)>1){return(sum(currentumr)/length(currentumr))}else{return(NA)}
})
)
}
return(res)
}
hist(internrate(c("CRIA","EHGO","PARIS")),breaks=50)
hist(internrate(c("CRIA")),breaks=50)
hist(internrate(c("EHGO")),breaks=50)
hist(internrate(c("PARIS")),breaks=50)
mods= c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
g=ggplot(data.frame(mod=mods,year=years,type=types),aes(x=year,y=mod,colour=type,group=type))
g+geom_point()+geom_line()
ccoefs= c();years=c();types=c();ccoefnames=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interaxes = t(axesprobas)%*%adjacency%*%axesprobas
for(axe in axes){if(sum(interaxes[axe,])>0){rate=interaxes[axe,axe]/sum(interaxes[axe,]);
ccoefs=append(ccoefs,rate);types=append(types,"axes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(axe,year))}}
interteams = t(teamprobas)%*%adjacency%*%teamprobas
for(team in teams){if(sum(interteams[team,])>0){rate=interteams[team,team]/sum(interteams[team,]);
ccoefs=append(ccoefs,rate);types=append(types,"equipes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(team,year))}}
}
names(ccoefs)<-ccoefnames
g=ggplot(data.frame(ccoef=ccoefs,year=years,type=types),aes(x=year,y=ccoef,colour=type,group=type))
g+geom_point()+geom_smooth()
ccoefs= c();years=c();types=c();ccoefnames=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interaxes = t(axesprobas)%*%adjacency%*%axesprobas
for(axe in axes){if(sum(interaxes[axe,])>0){rate=sum(interaxes[axe,axe])/sum(interaxes[axe,]);
ccoefs=append(ccoefs,rate);types=append(types,"axes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(axe,year))}}
interteams = t(teamprobas)%*%adjacency%*%teamprobas
for(team in teams){if(sum(interteams[team,])>0){rate=sum(interteams[team,team])/sum(interteams[team,]);
ccoefs=append(ccoefs,rate);types=append(types,"equipes");years=append(years,year);ccoefnames=append(ccoefnames,paste0(team,year))}}
}
names(ccoefs)<-ccoefnames
g=ggplot(data.frame(ccoef=ccoefs,year=years,type=types),aes(x=year,y=ccoef,colour=type,group=type))
g+geom_point()+geom_smooth()
interteams = t(teamprobas)%*%adjacency%*%teamprobas
interteams
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
load(paste0('res/graph_',year,'.RData'));n=length(V(g)$name)
axesprobas = authorsProbas(V(g)$name,8,axes,c(year));teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
interdisc=append(interdisc,1-rowSums(axesprobas^2))
interdisc=append(interdisc,1-rowSums(teamprobas^2))
years=append(years,rep(year,2*n));types=append(types,c(rep("axes",n),rep("equipes",n)))
}
g=ggplot(data.frame(interdisc=interdisc,year=as.character(years),type=types),aes(x=interdisc,colour=year))
g+geom_density()+facet_wrap(~type)
interdisc=c();years=c();types=c()
for(year in allyears){
show(year)
# load graph
load(paste0('res/graph_',year,'.RData'))
adjacency = as.matrix(as_adjacency_matrix(g,type = "both"))
axesprobas = authorsProbas(V(g)$name,8,axes,c(year))
teamprobas = authorsProbas(V(g)$name,6,teams,c(year))
axesinter = adjacency%*%axesprobas;axesinter=t(apply(axesinter,1,function(r){r/sum(r)}))
teaminter = adjacency%*%teamprobas;teaminter=t(apply(teaminter,1,function(r){r/sum(r)}))
interdisc=append(interdisc,1-rowSums(axesinter^2))
interdisc=append(interdisc,1-rowSums(teaminter^2))
years=append(years,rep(year,nrow(axesinter)+nrow(teaminter)));types=append(types,c(rep("axes",nrow(axesinter)),rep("equipes",nrow(teaminter))))
}
g=ggplot(data.frame(interdisc=interdisc,year=as.character(years),type=types),aes(x=interdisc,colour=year))
g+geom_density()+facet_wrap(~type,scales = "free")
nrow(authors)
length(which(authors$umr==1))/nrow(authors)
