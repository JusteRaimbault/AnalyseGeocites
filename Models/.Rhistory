sd(rateall)
rateparis = byteam$nbauthorsintern[byteam$nbauthors>1&byteam$paris>0]/byteam$nbauthors[byteam$nbauthors>1&byteam$paris>0]
mean(rateparis)
sd(rateparis)
ratecria = byteam$nbauthorsintern[byteam$nbauthors>1&byteam$cria>0]/byteam$nbauthors[byteam$nbauthors>1&byteam$cria>0]
mean(ratecria)
sd(ratecria)
ratehgo = byteam$nbauthorsintern[byteam$nbauthors>1&byteam$ehgo>0]/byteam$nbauthors[byteam$nbauthors>1&byteam$ehgo>0]
mean(ratehgo)
sd(ratehgo)
length(which(byteam$withDoctorant==1))/nrow(byteam)
length(which(byteam$withDoctorant==1&byteam$paris>0))/sum(byteam$paris)
length(which(byteam$withDoctorant==1&byteam$cria>0))/sum(byteam$cria)
length(which(byteam$withDoctorant==1&byteam$ehgo>0))/sum(byteam$ehgo)
100*length(which(byteam$withDoctorant==1))/nrow(byteam)
100*length(which(byteam$withDoctorant==1&byteam$paris>0))/sum(byteam$paris)
100*length(which(byteam$withDoctorant==1&byteam$cria>0))/sum(byteam$cria)
100*length(which(byteam$withDoctorant==1&byteam$ehgo>0))/sum(byteam$ehgo)
# doctorants seuls - un auteur
100*length(which(byteam$withDoctorant==1&byteam$nbauthors==1))/nrow(byteam)
100*length(which(byteam$withDoctorant==1&byteam$paris>0&byteam$nbauthors==1))/sum(byteam$paris)
100*length(which(byteam$withDoctorant==1&byteam$cria>0&byteam$nbauthors==1))/sum(byteam$cria)
100*length(which(byteam$withDoctorant==1&byteam$ehgo>0&byteam$nbauthors==1))/sum(byteam$ehgo)
100*length(which(byteam$onlyDoctorants))/nrow(byteam)
100*length(which(byteam$onlyDoctorants&byteam$paris>0))/sum(byteam$paris)
100*length(which(byteam$onlyDoctorants&byteam$cria>0))/sum(byteam$cria)
100*length(which(byteam$onlyDoctorants&byteam$ehgo>0))/sum(byteam$ehgo)
length(which(authors$STATUT==1))
length(which(authors$STATUT==1))/length(which(authors$MEMBRE==1))
100*length(which(byteam$nbequipes>1&byteam$nbauthors>1))/length(which(byteam$nbauthors>1))
#byteam[byteam$nbequipes==3,]
#data.frame(publis[publis$id==7216,])
100*length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$paris>0))/length(which(byteam$nbauthors>1&byteam$paris>0))
100*length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$cria>0))/length(which(byteam$nbauthors>1&byteam$cria>0))
100*length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$ehgo>0))/length(which(byteam$nbauthors>1&byteam$ehgo>0))
# p
100*length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$paris>0))/length(which(byteam$nbauthors>1&byteam$paris>0))
length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$paris>0))
length(which(byteam$nbauthors>1&byteam$paris>0))
100*length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$cria>0))/length(which(byteam$nbauthors>1&byteam$cria>0))
length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$cria>0))
length(which(byteam$nbauthors>1&byteam$cria>0))
100*length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$ehgo>0))/length(which(byteam$nbauthors>1&byteam$ehgo>0))
length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$ehgo>0))
length(which(byteam$nbauthors>1&byteam$ehgo>0))
100*length(which(byteam$nbaxes>1&byteam$nbauthors>1))/length(which(byteam$nbauthors>1))
100*length(which(byteam$nbaxes>1&byteam$nbauthors>1&byteam$paris>0))/length(which(byteam$nbauthors>1&byteam$paris>0))
100*length(which(byteam$nbaxes>1&byteam$nbauthors>1&byteam$cria>0))/length(which(byteam$nbauthors>1&byteam$cria>0))
100*length(which(byteam$nbaxes>1&byteam$nbauthors>1&byteam$ehgo>0))/length(which(byteam$nbauthors>1&byteam$ehgo>0))
length(which(authors$MEMBRE==1))
nrow(authors)
authorship
length(unique(authorship$AuteurDesamb))
resdir = paste0(Sys.getenv('CS_HOME'),'/Misc/AnalyseGeocites/Results/measures/')
counts = c();cyears=c();types=c()
for(year in years){
counts=append(counts,length(which(byteam$year==year)));types=append(types,'all');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$year==year&byteam$paris>0)));types=append(types,'paris');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$year==year&byteam$cria>0)));types=append(types,'cria');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$year==year&byteam$ehgo>0)));types=append(types,'ehgo');cyears=append(cyears,year)
}
ggplot(data.frame(publis=counts,year=cyears,type=types),aes(x=year,y=publis,col=type,group=type))+geom_point()+geom_line()
ggsave(filename = paste0(resdir,'publi_count.pdf'),width=15,height=10,units = 'cm')
counts = c();cyears=c();types=c()
for(year in years){
counts=append(counts,length(which(byteam$nbauthors==1&byteam$year==year))/length(which(byteam$year==year)));types=append(types,'all');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbauthors==1&byteam$paris>0&byteam$year==year))/sum(byteam$paris[byteam$year==year]));types=append(types,'paris');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbauthors==1&byteam$cria>0&byteam$year==year))/sum(byteam$cria[byteam$year==year]));types=append(types,'cria');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbauthors==1&byteam$ehgo>0&byteam$year==year))/sum(byteam$ehgo[byteam$year==year]));types=append(types,'ehgo');cyears=append(cyears,year)
}
ggplot(data.frame(singleauthorrate=counts,year=cyears,type=types),aes(x=year,y=singleauthorrate,col=type,group=type))+geom_point()+geom_line()
ggsave(filename = paste0(resdir,'single_author_rate.pdf'),width=15,height=10,units = 'cm')
counts = c();cyears=c();types=c()
for(year in years){
counts=append(counts,length(which(byteam$internonly!=1&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$year==year)));types=append(types,'all');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$internonly!=1&byteam$paris>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$paris>0&byteam$year==year))
);types=append(types,'paris');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$internonly!=1&byteam$cria>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$cria>0&byteam$year==year))
);types=append(types,'cria');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$internonly!=1&byteam$ehgo>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$ehgo>0&byteam$year==year))
);types=append(types,'ehgo');cyears=append(cyears,year)
}
ggplot(data.frame(externalrate=counts,year=cyears,type=types),aes(x=year,y=externalrate,col=type,group=type))+geom_point()+geom_line()
# NOTE : for ehgo in 2013, 3 publis only with nbauthors > 1
ggsave(filename = paste0(resdir,'external_rate.pdf'),width=15,height=10,units = 'cm')
rates = c();cyears=c();types=c()
for(year in years){
allrows=byteam$nbauthors>1&byteam$year==year
rates=append(rates,byteam$nbauthorsintern[allrows]/byteam$nbauthors[allrows]);types=append(types,rep('all',length(which(allrows))));cyears=append(cyears,rep(year,length(which(allrows))))
parisrows=byteam$nbauthors>1&byteam$year==year&byteam$paris>0
rates=append(rates,byteam$nbauthorsintern[parisrows]/byteam$nbauthors[parisrows]);types=append(types,rep('paris',length(which(parisrows))));cyears=append(cyears,rep(year,length(which(parisrows))))
criarows=byteam$nbauthors>1&byteam$year==year&byteam$cria>0
rates=append(rates,byteam$nbauthorsintern[criarows]/byteam$nbauthors[criarows]);types=append(types,rep('cria',length(which(criarows))));cyears=append(cyears,rep(year,length(which(criarows))))
ehgorows=byteam$nbauthors>1&byteam$year==year&byteam$ehgo>0
rates=append(rates,byteam$nbauthorsintern[ehgorows]/byteam$nbauthors[ehgorows]);types=append(types,rep('ehgo',length(which(ehgorows))));cyears=append(cyears,rep(year,length(which(ehgorows))))
}
ggplot(data.frame(publiinternrate=rates,year=cyears,type=types),aes(x=year,y=publiinternrate,color=type))+geom_point(size=0.5)+stat_smooth()+ylab("Publication internal rate")
ggsave(filename = paste0(resdir,'publiinternrate.pdf'),width=15,height=10,units = 'cm')
counts= c();cyears=c();types=c()
for(year in years){
counts=append(counts,length(which(byteam$withDoctorant==1&byteam$year==year))/length(which(byteam$year==year)));types=append(types,'all');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$withDoctorant==1&byteam$paris>0&byteam$year==year))/sum(byteam$paris[byteam$year==year]));types=append(types,'paris');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$withDoctorant==1&byteam$cria>0&byteam$year==year))/sum(byteam$cria[byteam$year==year]));types=append(types,'cria');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$withDoctorant==1&byteam$ehgo>0&byteam$year==year))/sum(byteam$ehgo[byteam$year==year]));types=append(types,'ehgo');cyears=append(cyears,year)
}
ggplot(data.frame(withdoctorantrate=counts,year=cyears,type=types),aes(x=year,y=withdoctorantrate,col=type,group=type))+geom_point()+geom_line()+ylab("Taux publis avec doctorant")
ggsave(filename = paste0(resdir,'taux_doctorant.pdf'),width=15,height=10,units = 'cm')
counts = c();cyears=c();types=c()
for(year in years){
counts=append(counts,length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$year==year)));types=append(types,'all');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$paris>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$paris>0&byteam$year==year))
);types=append(types,'paris');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$cria>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$cria>0&byteam$year==year))
);types=append(types,'cria');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbequipes>1&byteam$nbauthors>1&byteam$ehgo>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$ehgo>0&byteam$year==year))
);types=append(types,'ehgo');cyears=append(cyears,year)
}
ggplot(data.frame(interteam=counts,year=cyears,type=types),aes(x=year,y=interteam,col=type,group=type))+geom_point()+geom_line()+ylab("Taux publis interÃ©quipes")
ggsave(filename = paste0(resdir,'tauxpublisinterequipe.pdf'),width=15,height=10,units = 'cm')
counts = c();cyears=c();types=c()
for(year in years){
counts=append(counts,length(which(byteam$nbaxes>1&byteam$nbauthors>1&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$year==year)));types=append(types,'all');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbaxes>1&byteam$nbauthors>1&byteam$paris>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$paris>0&byteam$year==year))
);types=append(types,'paris');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbaxes>1&byteam$nbauthors>1&byteam$cria>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$cria>0&byteam$year==year))
);types=append(types,'cria');cyears=append(cyears,year)
counts=append(counts,length(which(byteam$nbaxes>1&byteam$nbauthors>1&byteam$ehgo>0&byteam$year==year))/length(which(byteam$nbauthors>1&byteam$ehgo>0&byteam$year==year))
);types=append(types,'ehgo');cyears=append(cyears,year)
}
ggplot(data.frame(interaxe=counts,year=cyears,type=types),aes(x=year,y=interaxe,col=type,group=type))+geom_point()+geom_line()+ylab("Taux publis interaxes")
ggsave(filename = paste0(resdir,'tauxpublisinteraxes.pdf'),width=15,height=10,units = 'cm')
authorship
unique(publis$axe)
sapply(publis$axe,function(s){strsplit(s,'s')[[1]]})
sapply(publis$axe,function(s){strsplit(s,',')[[1]]})
unlist(sapply(publis$axe,function(s){strsplit(s,',')[[1]]}))
unique(unlist(sapply(publis$axe,function(s){strsplit(s,',')[[1]]})))
axes = unique(unlist(sapply(publis$axe,function(s){strsplit(s,',')[[1]]})))
nrow(publis)
nrow(byteam)
byteam$id_article
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
axes
collabmatrix = matrix(0,length(axes),length(axes));rownames(collabmatrix)=axes;colnames(collabmatrix)=axes
collabmatrix
publis$axe[publis$id%in%byteam$id_article]
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
collabmatrix = matrix(0,length(axes),length(axes));rownames(collabmatrix)=axes;colnames(collabmatrix)=axes
for(axestr in publis$axe[publis$id%in%byteam$id_article]){
currentaxes = strsplit(axestr,',')
if(length(currentaxes)==1){collabmatrix[currentaxes[1],currentaxes[1]]=collabmatrix[currentaxes[1],currentaxes[1]]+1}
else{for(i1 in 1:(length(currentaxes)-1)){for(i2 in (i1+1):length(currentaxes)){collabmatrix[currentaxes[i1],currentaxes[i2]]=collabmatrix[currentaxes[i1],currentaxes[i2]]+1}}}
}
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
collabmatrix = matrix(0,length(axes),length(axes));rownames(collabmatrix)=axes;colnames(collabmatrix)=axes
for(axestr in publis$axe[publis$id%in%byteam$id_article]){
currentaxes = strsplit(axestr,',')[[1]]
if(length(currentaxes)==1){collabmatrix[currentaxes[1],currentaxes[1]]=collabmatrix[currentaxes[1],currentaxes[1]]+1}
else{for(i1 in 1:(length(currentaxes)-1)){for(i2 in (i1+1):length(currentaxes)){collabmatrix[currentaxes[i1],currentaxes[i2]]=collabmatrix[currentaxes[i1],currentaxes[i2]]+1}}}
}
currentaxes[i1]
currentaxes
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
collabmatrix = matrix(0,length(axes),length(axes));rownames(collabmatrix)=axes;colnames(collabmatrix)=axes
for(axestr in publis$axe[publis$id%in%byteam$id_article]){
currentaxes = strsplit(axestr,',')[[1]];show(currentaxes)
if(length(currentaxes)==1){collabmatrix[currentaxes[1],currentaxes[1]]=collabmatrix[currentaxes[1],currentaxes[1]]+1}
else{for(i1 in 1:(length(currentaxes)-1)){for(i2 in (i1+1):length(currentaxes)){collabmatrix[currentaxes[i1],currentaxes[i2]]=collabmatrix[currentaxes[i1],currentaxes[i2]]+1}}}
}
axestr
publis$axe
publis$axe[publis$id%in%byteam$id_article]
collabmatrix = matrix(0,length(axes),length(axes));rownames(collabmatrix)=axes;colnames(collabmatrix)=axes
for(axestr in publis$axe[publis$id%in%byteam$id_article]){
show(axestr)
currentaxes = strsplit(axestr,',')[[1]];show(currentaxes)
if(length(currentaxes)==1){collabmatrix[currentaxes[1],currentaxes[1]]=collabmatrix[currentaxes[1],currentaxes[1]]+1}
else{for(i1 in 1:(length(currentaxes)-1)){for(i2 in (i1+1):length(currentaxes)){collabmatrix[currentaxes[i1],currentaxes[i2]]=collabmatrix[currentaxes[i1],currentaxes[i2]]+1}}}
}
head(publis$axe[publis$id%in%byteam$id_article])
collabmatrix = matrix(0,length(axes),length(axes));rownames(collabmatrix)=axes;colnames(collabmatrix)=axes
for(axestr in publis$axe[publis$id%in%byteam$id_article]){
if(nchar(axestr)>0){
currentaxes = strsplit(axestr,',')[[1]];
if(length(currentaxes)==1){collabmatrix[currentaxes[1],currentaxes[1]]=collabmatrix[currentaxes[1],currentaxes[1]]+1}
else{for(i1 in 1:(length(currentaxes)-1)){for(i2 in (i1+1):length(currentaxes)){collabmatrix[currentaxes[i1],currentaxes[i2]]=collabmatrix[currentaxes[i1],currentaxes[i2]]+1}}}
}
}
collabmatrix
write.table(collabmatrix,file = paste0(resdir,'axescollab.csv'),quote = FALSE,sep = ',',row.names = T,col.names = T)
help("shuffle")
??shuffle
authorship
authors$EQUIPE
authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")
authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
names = authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
names
team_authorship
authorship
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
collabmatrix = matrix(0,length(axes),length(axes));rownames(collabmatrix)=axes;colnames(collabmatrix)=axes
for(axestr in publis$axe[publis$id%in%byteam$id_article]){
if(nchar(axestr)>0){
currentaxes = strsplit(axestr,',')[[1]];
if(length(currentaxes)==1){collabmatrix[currentaxes[1],currentaxes[1]]=collabmatrix[currentaxes[1],currentaxes[1]]+1}
else{for(i1 in 1:length(currentaxes)){for(i2 in 1:length(currentaxes)){collabmatrix[currentaxes[i1],currentaxes[i2]]=collabmatrix[currentaxes[i1],currentaxes[i2]]+1}}}
}
}
write.table(collabmatrix,file = paste0(resdir,'axescollab.csv'),quote = FALSE,sep = ',',row.names = T,col.names = T)
coAuthorshipAdj <- function(year){
names = authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
adj = matrix(0,length(names),length(names))
for(pubid in unique(byteam$id_article)){
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
if(length(currentauths)>1){for(i1 in 1:length(currentauths)){for(i2 in i1:length(currentauths)){if(i1!=i2){adj[currentauths[i1],currentauths[i2]]=adj[currentauths[i1],currentauths[i2]]+1}}}}
}
return(adj)
}
coAuthorshipAdj <- function(year){
names = authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
adj = matrix(0,length(names),length(names))
for(pubid in unique(byteam$id_article&byteam$year==year)){
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
if(length(currentauths)>1){for(i1 in 1:length(currentauths)){for(i2 in i1:length(currentauths)){if(i1!=i2){adj[currentauths[i1],currentauths[i2]]=adj[currentauths[i1],currentauths[i2]]+1}}}}
}
return(adj)
}
coAuthorshipAdj(2012)
sum(coAuthorshipAdj(2012))
byteam$year
byteam
year=2012
names = authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
names
adj = matrix(0,length(names),length(names))
unique(byteam$id_article&byteam$year==year)
coAuthorshipAdj <- function(year){
names = authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
adj = matrix(0,length(names),length(names))
for(pubid in unique(byteam$id_article[byteam$year==year])){
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
if(length(currentauths)>1){for(i1 in 1:length(currentauths)){for(i2 in i1:length(currentauths)){if(i1!=i2){adj[currentauths[i1],currentauths[i2]]=adj[currentauths[i1],currentauths[i2]]+1}}}}
}
return(adj)
}
coAuthorshipAdj(2012)
coAuthorshipAdj <- function(year){
names = authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
adj = matrix(0,length(names),length(names))
rownames(adj)=names;colnames(adj)=names
for(pubid in unique(byteam$id_article[byteam$year==year])){
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
if(length(currentauths)>1){for(i1 in 1:length(currentauths)){for(i2 in i1:length(currentauths)){if(i1!=i2){adj[currentauths[i1],currentauths[i2]]=adj[currentauths[i1],currentauths[i2]]+1}}}}
}
return(adj)
}
coAuthorshipAdj(2012)
for(pubid in unique(byteam$id_article[byteam$year==year])){
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
if(length(currentauths)>1){for(i1 in 1:length(currentauths)){for(i2 in i1:length(currentauths)){if(i1!=i2){adj[currentauths[i1],currentauths[i2]]=adj[currentauths[i1],currentauths[i2]]+1}}}}
}
names = authors$NOM[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
adj = matrix(0,length(names),length(names))
rownames(adj)=names;colnames(adj)=names
for(pubid in unique(byteam$id_article[byteam$year==year])){
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
if(length(currentauths)>1){for(i1 in 1:length(currentauths)){for(i2 in i1:length(currentauths)){if(i1!=i2){adj[currentauths[i1],currentauths[i2]]=adj[currentauths[i1],currentauths[i2]]+1}}}}
}
pubid
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
currentauths
coAuthorshipAdj <- function(year){
names = authors$NOM#[authors$EQUIPE%in%c("P.A.R.I.S","C.R.I.A","E.H.GO")]
adj = matrix(0,length(names),length(names))
rownames(adj)=names;colnames(adj)=names
for(pubid in unique(byteam$id_article[byteam$year==year])){
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==pubid]
currentauths=currentauths[currentauths%in%names]
if(length(currentauths)>1){for(i1 in 1:length(currentauths)){for(i2 in i1:length(currentauths)){if(i1!=i2){adj[currentauths[i1],currentauths[i2]]=adj[currentauths[i1],currentauths[i2]]+1}}}}
}
return(adj)
}
coAuthorshipAdj(2012)
sum(coAuthorshipAdj(2012))
diag(coAuthorshipAdj(2012))
allyears=2012:2016
authorAxesProbas <- function(year){
names = authors$NOM
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
axesprobas = matrix(0,length(names),length(axes))
rownames(axesprobas)<-names;colnames(axesproba)<-axes
for(row in which(publis$id%in%byteam$id_article)){
axestr = publis$axe[row]
if(nchar(axestr)>0){
currentaxes = strsplit(axestr,',')[[1]];
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==publis$id[row]]
for(auth in currentauths){
for(axe in currentaxes){
axesprobas[auth,axe]=axesprobas[auth,axe]+1
}
}
}
}
return(t(apply(axesprobas,1,function(r){r/sum(r)})))
}
authorAxesProbas(2012)
axesprobas = matrix(0,length(names),length(axes))
rownames(axesprobas)<-names;colnames(axesproba)<-axes
authorAxesProbas <- function(year){
names = authors$NOM
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
axesprobas = matrix(0,length(names),length(axes))
rownames(axesprobas)<-names;colnames(axesprobas)<-axes
for(row in which(publis$id%in%byteam$id_article)){
axestr = publis$axe[row]
if(nchar(axestr)>0){
currentaxes = strsplit(axestr,',')[[1]];
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==publis$id[row]]
for(auth in currentauths){
for(axe in currentaxes){
axesprobas[auth,axe]=axesprobas[auth,axe]+1
}
}
}
}
return(t(apply(axesprobas,1,function(r){r/sum(r)})))
}
authorAxesProbas(2012)
authorAxesProbas <- function(year){
names = authors$NOM
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
axesprobas = matrix(0,length(names),length(axes))
rownames(axesprobas)<-names;colnames(axesprobas)<-axes
for(row in which(publis$id%in%byteam$id_article)){
axestr = publis$axe[row]
if(nchar(axestr)>0){
currentaxes = strsplit(axestr,',')[[1]];
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==publis$id[row]]
for(auth in currentauths){
if(auth%in%names){
for(axe in currentaxes){
axesprobas[auth,axe]=axesprobas[auth,axe]+1
}
}
}
}
}
return(t(apply(axesprobas,1,function(r){r/sum(r)})))
}
authorAxesProbas(2012)
authorAxesProbas <- function(year){
names = authors$NOM
axes = unique(unlist(sapply(publis$axe[publis$id%in%byteam$id_article],function(s){strsplit(s,',')[[1]]})))
axesprobas = matrix(0,length(names),length(axes))
rownames(axesprobas)<-names;colnames(axesprobas)<-axes
for(row in which(publis$id%in%byteam$id_article)){
axestr = publis$axe[row]
if(nchar(axestr)>0){
currentaxes = strsplit(axestr,',')[[1]];
currentauths = team_authorship$AuteurDesamb[team_authorship$id_article==publis$id[row]]
for(auth in currentauths){
if(auth%in%names){
for(axe in currentaxes){
axesprobas[auth,axe]=axesprobas[auth,axe]+1
}
}
}
}
}
axesprobas=axesprobas[rowSums(axesprobas)>0,]
return(t(apply(axesprobas,1,function(r){r/sum(r)})))
}
authorAxesProbas(2012)
dim(authorAxesProbas(2012))
allyears=2012:2016
mods= c();years=c();types=c()
for(year in allyears){
show(year)
adjacency =coAuthorshipAdj(year)
axesprobas = authorAxesProbas(year)#authorsProbas(V(g)$name,8,axes,c(year))
#teamprobas = #authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
#mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
library(Matrix)
overlappingmodularity <- function(probas,adjacency){#,linkfun=function(p1,p2){return(p1*p2)}){
show(paste0('Computing overlapping modularity : dim(probas)=',dim(probas)[1],' ',dim(probas)[2],' ; dim(adjacency)=',dim(adjacency)[1],' ',dim(adjacency)[2]))
m = sum(adjacency)
n=nrow(probas)
kout=rowSums(adjacency)
kin=colSums(adjacency)
res=0
for(c in 1:ncol(probas)){
if(sum(probas[,c])>0){
if(c%%100==0){show(c/ncol(probas))}
a1 = Diagonal(x=probas[,c])%*%adjacency%*%Diagonal(x=probas[,c])
a2 = sum(kout*probas[,c])*sum(kin*probas[,c])*((sum(probas[,c])/n)^2)/m
res = res + sum(a1) - a2
rm(a1);gc() # loose time to call gc at each step ?
}
}
return(res/m)
}
mods= c();years=c();types=c()
for(year in allyears){
show(year)
adjacency =coAuthorshipAdj(year)
axesprobas = authorAxesProbas(year)#authorsProbas(V(g)$name,8,axes,c(year))
#teamprobas = #authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency))
#mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
mods= c();years=c();types=c()
for(year in allyears){
show(year)
adjacency =coAuthorshipAdj(year)
axesprobas = authorAxesProbas(year)#authorsProbas(V(g)$name,8,axes,c(year))
#teamprobas = #authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency[rownames(axesprobas),rownames(axesprobas)]))
#mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
names = authors$NOM
teamprobas = as.matrix(data.frame(paris = as.numeric(authors$EQUIPE=="P.A.R.I.S"),
cria = as.numeric(authors$EQUIPE=="C.R.I.A"),
ehgo=as.numeric(authors$EQUIPE=="E.H.GO")))
names = authors$NOM
teamprobas = as.matrix(data.frame(paris = as.numeric(authors$EQUIPE=="P.A.R.I.S"),
cria = as.numeric(authors$EQUIPE=="C.R.I.A"),
ehgo=as.numeric(authors$EQUIPE=="E.H.GO")))
rownames(teamprobas)<-names
mods= c();years=c();types=c()
for(year in allyears){
show(year)
adjacency =coAuthorshipAdj(year)
axesprobas = authorAxesProbas(year)#authorsProbas(V(g)$name,8,axes,c(year))
#teamprobas = #authorsProbas(V(g)$name,6,teams,c(year))
mods=append(mods,overlappingmodularity(axesprobas,adjacency[rownames(axesprobas),rownames(axesprobas)]))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
}
g=ggplot(data.frame(mod=mods,year=years,type=types),aes(x=year,y=mod,colour=type,group=type))
g+geom_point()+geom_line()
sample.int(10)
g=ggplot(data.frame(mod=mods,year=years,type=types,rdmod=rdmods,sdrdmod=rdsdmods))
g+geom_point(aes(x=year,y=mod,colour=type,group=type))+geom_line(aes(x=year,y=mod,colour=type,group=type))+
geom_point(aes(x=year,y=rdmod,colour=type,group=type))+geom_line(aes(x=year,y=rdmod,colour=type,group=type),type=2)
nrepet=50
mods= c();years=c();types=c()
rdmods=c();rdsdmods=c()
for(year in allyears){
show(year)
adjacency =coAuthorshipAdj(year)
axesprobas = authorAxesProbas(year)#authorsProbas(V(g)$name,8,axes,c(year))
#teamprobas = #authorsProbas(V(g)$name,6,teams,c(year))
axeadj=adjacency[rownames(axesprobas),rownames(axesprobas)]
mods=append(mods,overlappingmodularity(axesprobas,axeadj))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
# randomized networks
ramod=c();rtmod=c()
for(i in 1:nrepet){
ramod=append(ramod,overlappingmodularity(axesprobas,axeadj[sample.int(nrow(adj)),sample.int(ncol(adj))]))
rtmod=append(rtmod,overlappingmodularity(teamprobas,adjacency[sample.int(nrow(adjacency)),sample.int(ncol(adjacency))]))
}
rdmods=append(rdmods,mean(ramod));rdmods=append(rdmods,mean(rtmod))
rdsdmods=append(rdsdmods,sd(ramod));rdsdmods=append(rdsdmods,sd(rtmod))
}
mods= c();years=c();types=c()
rdmods=c();rdsdmods=c()
for(year in allyears){
show(year)
adjacency =coAuthorshipAdj(year)
axesprobas = authorAxesProbas(year)#authorsProbas(V(g)$name,8,axes,c(year))
#teamprobas = #authorsProbas(V(g)$name,6,teams,c(year))
axeadj=adjacency[rownames(axesprobas),rownames(axesprobas)]
mods=append(mods,overlappingmodularity(axesprobas,axeadj))
mods=append(mods,overlappingmodularity(teamprobas,adjacency))
years=append(years,c(year,year));types=append(types,c("axes","equipes"))
# randomized networks
ramod=c();rtmod=c()
for(i in 1:nrepet){
ramod=append(ramod,overlappingmodularity(axesprobas,axeadj[sample.int(nrow(axeadj)),sample.int(ncol(axeadj))]))
rtmod=append(rtmod,overlappingmodularity(teamprobas,adjacency[sample.int(nrow(adjacency)),sample.int(ncol(adjacency))]))
}
rdmods=append(rdmods,mean(ramod));rdmods=append(rdmods,mean(rtmod))
rdsdmods=append(rdsdmods,sd(ramod));rdsdmods=append(rdsdmods,sd(rtmod))
}
g=ggplot(data.frame(mod=mods,year=years,type=types,rdmod=rdmods,sdrdmod=rdsdmods))
g+geom_point(aes(x=year,y=mod,colour=type))+geom_line(aes(x=year,y=mod,colour=type,group=type))+
geom_point(aes(x=year,y=rdmod,colour=type))+geom_line(aes(x=year,y=rdmod,colour=type,group=type),linetype=2)+
geom_errorbar(aes(x=year,y=rdmod,ymin=rdmod-sdrdmod,ymax=rdmod+sdrdmod,colour=type))
g=ggplot(data.frame(mod=mods,year=years,type=types,rdmod=rdmods,sdrdmod=rdsdmods))
g+geom_point(aes(x=year,y=mod,colour=type))+geom_line(aes(x=year,y=mod,colour=type,group=type))+
geom_point(aes(x=year,y=rdmod,colour=type))+geom_line(aes(x=year,y=rdmod,colour=type,group=type),linetype=2)+
geom_errorbar(aes(x=year,y=rdmod,ymin=rdmod-sdrdmod,ymax=rdmod+sdrdmod,colour=type),width=0.1)
g=ggplot(data.frame(mod=mods,year=years,type=types,rdmod=rdmods,sdrdmod=rdsdmods))
g+geom_point(aes(x=year,y=mod,colour=type))+geom_line(aes(x=year,y=mod,colour=type,group=type))+
geom_point(aes(x=year,y=rdmod,colour=type))+geom_line(aes(x=year,y=rdmod,colour=type,group=type),linetype=2)+
geom_errorbar(aes(x=year,y=rdmod,ymin=rdmod-sdrdmod,ymax=rdmod+sdrdmod,colour=type),width=0.15)
g+geom_point(aes(x=year,y=mod,colour=type))+geom_line(aes(x=year,y=mod,colour=type,group=type))+
geom_point(aes(x=year,y=rdmod,colour=type))+geom_line(aes(x=year,y=rdmod,colour=type,group=type),linetype=2)+
geom_errorbar(aes(x=year,y=rdmod,ymin=rdmod-sdrdmod,ymax=rdmod+sdrdmod,colour=type),width=0.15)+
xlab("Multiclass modularity")
g=ggplot(data.frame(mod=mods,year=years,type=types,rdmod=rdmods,sdrdmod=rdsdmods))
g+geom_point(aes(x=year,y=mod,colour=type))+geom_line(aes(x=year,y=mod,colour=type,group=type))+
geom_point(aes(x=year,y=rdmod,colour=type))+geom_line(aes(x=year,y=rdmod,colour=type,group=type),linetype=2)+
geom_errorbar(aes(x=year,y=rdmod,ymin=rdmod-sdrdmod,ymax=rdmod+sdrdmod,colour=type),width=0.15)+
ylab("Multiclass modularity")
